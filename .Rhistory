install.packages("TinyTex")
y
intall.packages("tinytex")
install.packages("tinytex")
quarto install tinytex
quarto install tinytex::reinstall_tinytex()
obesity <- read.csv("DAProject12.csv")
# Interpretation is in log-odds!
model_age %>% tidy(conf.int = T)
# Interpretation is in log-odds!
model_age %>% tidy(conf.int = T)
tab(model_age)
library(sjPlot)
# Regression to check if Age is a significant predictor
model_age <- glm(BMIgroup ~ Age,
data = BMI,
family = binomial)
BMI <- obesity
```{r}
BMI$BMIgroup <- as.factor(BMI$BMIgroup)
levels(BMI$BMIgroup) <- c("Not Obese", "Obese", "Not Obese", "Not Obese")
BMI$BMIgroup <- as.factor(BMI$BMIgroup)
levels(BMI$BMIgroup) <- c("Not Obese", "Obese", "Not Obese", "Not Obese")
levels(BMI$BMIgroup)
levels(BMI$Education)
values(BMI$Education)
View(BMI)
glimpse(BMI$Education)
summary(BMI$Education)
skim(BMI$Education)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(tidymodels)
library(performance)
library(tinytex)
library(sjPlot)
skim(BMI$Education)
glimpse(BMI$Education)
levels(BMI$BMIgroup)
BMI$BMIgroup <- as.factor(BMI$BMIgroup)
levels(BMI$BMIgroup) <- c("Not Obese", "Obese", "Not Obese", "Not Obese")
BMI$BMIgeoup <- relevel(BMI$BMIgroup, ref = "Obese")
BMI$BMIgroup <- as.factor(BMI$BMIgroup)
levels(BMI$BMIgroup) <- c("Not Obese", "Obese", "Not Obese", "Not Obese")
BMI$BMIgroup <- relevel(BMI$BMIgroup, ref = "Obese")
levels(BMI$BMIgroup)
obesity <- read.csv("DAProject12.csv")
BMI <- obesity
library(dplyr)
library(ggplot2)
library(tidyverse)
library(tidymodels)
library(performance)
library(tinytex)
library(skimr)
library(kableExtra)
BMI$BMIgroup <- as.factor(BMI$BMIgroup)
levels(BMI$BMIgroup) <- c("Not Obese", "Obese", "Not Obese", "Not Obese")
BMI$BMIgroup <- relevel(BMI$BMIgroup, ref = "Obese")
model_edu <- glm(BMIgroup ~ Education,
data = BMI,
family = binomial)
tab_model(model_edu, show.obs = F)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(tidymodels)
library(performance)
library(tinytex)
library(skimr)
library(kableExtra)
tab_model(model_edu, show.obs = F)
library(sjPlot)
tab_model(model_edu, show.obs = F)
